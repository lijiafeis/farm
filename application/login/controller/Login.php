<?php
/**
 * Created by PhpStorm.
 * User: 处理用户登录注册的逻辑代码
 * Date: 2017/12/26 0026
 * Time: 09:03
 */
namespace app\login\controller;
use think\Controller;
use think\Request;

class Login extends Controller{

    public function _initialize()
    {
//        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Origin:http://127.0.0.1:5925');
        parent::_initialize(); // TODO: Change the autogenerated stub
//        $ip = getIp();
//        $url = $_SERVER['REQUEST_URI'];
//        if(strpos($url,'return_url') || strpos($url,'notify_url')){
//
//        }else if($ip != '1.194.22.114'){
//            exit;
//        }
    }
function test(){
    $jiasu_number =   db('user_withdraw_log') 
    -> field('count(*) as number,sum(gold) as gold') 
    -> where(['user_id' => 147]) -> whereTime('create_time','today') -> buildSql();
            dump($jiasu_number);
}
    /**
     * 用户登录
     */
    public function login(){
        $username = trim(input('post.username',''));
        $password = trim(input('post.password',''));
        if(!$username || !$password || !verifyTel($username)){
            $return['code'] = '10001';
            $return['msg'] = '请输入账号或密码';
            return json($return);
        }
        //判断是否和数据库的一样
        $userInfo = db('user') -> where(['username' => $username]) -> find();
        if($userInfo){
            //判断是否一样
            $password = xgmd5($password);
            if($userInfo['password'] == $password){
                if($userInfo['is_forbidden'] == 1){
                    $return['code'] = '10004';
                    $return['msg'] = '账号错误,请联系管理员';
                    return json($return);
                }

                $session_id = session('user_id',$userInfo);
                $session_info['user_id'] = $userInfo['user_id'];
                $session_info['session_id'] = $session_id;
                $session_info['time'] = time();
                $session_info['ip'] = getIp();
                $is_flag = db('session_info') -> field('id') -> where(['user_id' => $userInfo['user_id']]) -> find();
                if($is_flag){
                    model('session_info') -> save($session_info,['user_id' => $userInfo['user_id']]);
                }else{
                    db('session_info') -> insert($session_info);
                }
                cache('session'.$userInfo['user_id'],$session_info);
                cache('user'.$userInfo['user_id'],null);
                $return['code'] = '10000';
                $return['msg'] = '登录成功';
                $return['token'] = $session_info['session_id'];
                return json($return);
            }else{
                $return['code'] = '10002';
                $return['msg'] = '账号或密码错误';
                return json($return);
            }
        }else{
            $return['code'] = '10002';
            $return['msg'] = '账号或密码错误';
            return json($return);
        }
        $return['code'] = '10003';
        $return['msg'] = '账号或密码错误';
        return json($return);
    }

    function appDown(){
        $url = "https://0x9.me/xpZ7K";
        $type = $this -> is_weixin();
        if($type == 1){
        //在微信中
            return $this -> fetch();
        }else{
            header("location:https://farm.wechatchat.cn");
        }
    }

    //判断打开方式 1 微信 2 其他
    function is_weixin(){
        if ( strpos($_SERVER['HTTP_USER_AGENT'], 'MicroMessenger') !== false ) {
            return 1;
        }
        return 2;
    }


    /**
     * 发送手机验证码
     * type 发送短信的类型，1是要注册 2 是要修改  类型不一样，查询的逻辑不一样
     * tel 手机号
     */
    public function sendMsg(){
        $type = input('post.type',1);
        $tel = input('post.tel','');
        $flag = verifyTel($tel);
        if(!$flag || ($type != 1 && $type != 2)){
            $return['code'] = '10001';
            $return['msg'] = '手机号码格式错误';
            return json($return);
        }
        $is_true = db('user') -> field('user_id') -> where(['username' => $tel]) -> find();
        //根据类型判断逻辑
        if($type == 1){
            //判断当前手机号是否注册
            if($is_true){
                $return['code'] = '10002';
                $return['msg'] = '当前手机号已注册';
                return json($return);
            }
            $session_name = $tel . 'register';

        }else if($type == 2){
            //判断当前手机号是否注册
            if(!$is_true){
                $return['code'] = '10002';
                $return['msg'] = '当前手机号未注册';
                return json($return);
            }
            $session_name = $tel . 'update';
        }
        $code = rand(100000,999999);
        $appname = "农场";
        $xigua_verify = session($session_name);
        if($xigua_verify){
            $return['code'] = '10003';
            $return['msg'] = '验证码已发送过,请查看手机短信';
            return json($return);
        }else{
            $flag = msg_everify($code,$tel,$appname);
            if($flag){
                session(array('name'=>$session_name,'expire'=>1800));
                session($session_name,$code);
                $return['code'] = '10000';
                $return['msg'] = '验证码发送成功';
                return json($return);
            }else{
                $return['code'] = '10004';
                $return['msg'] = '验证码发送失败';
                return json($return);
            }

        }
    }

    /**
     * @param int $_len 生成的字符的长度
     * @param int $_pixel 干扰点的个数
     * @param int $_width
     * @param int $_height
     */
    public function createImgCode(){
        $len = input('post.length',4);
        $pixel = input('post.pixel',100);
        $width = input('post.width',100);
        $height = input('post.height',20);
        $img = makeImage($len,$pixel,$width,$height);
        if($img){
            $return['code'] = '10000';
            $return['msg'] = $img;
            return json($return);
        }else{
            $return['code'] = '10001';
            $return['msg'] = '生成验证码失败';
            return json($return);
        }
    }

    /**
     * 注册调用接口
     * 手机号  昵称 手机验证码  图片验证码 ，密码1 密码2 上级id
     */
    public function register(){
        $p_id = input('get.id','');
        $this -> assign('p_id',$p_id);
        return $this -> fetch();

    }

    public function setRegister(){
        $tel = trim(input('post.username',''));
        $nickname = trim(input('post.nickname',''));
        $telCode = trim(input('post.telCode',''));
//        $imgCode = trim(input('post.imgCode',''));
        $password1 = trim(input('post.password1',''));
        $password2 = trim(input('post.password2',''));
        $p_id = input('post.p_id',0);

        if(!$tel || !$password1 || !$password2 || !verifyTel($tel) || !$nickname || !$telCode){
            $return['code'] = '10001';
            $return['msg'] = '参数值缺失';
            return json($return);
        }

//        //验证验证码
//        $imgCode1 = session('imgCode');
//        if(strtolower($imgCode1) != strtolower($imgCode)){
//            $return['code'] = '10002';
//            $return['msg'] = '图片验证码不正确';
//            return json($return);
//        }

//        if(!verifyPass($password1)){
//            $return['code'] = '10003';
//            $return['msg'] = '密码字母开头,只能包含字符、数字和下划线';
//            return json($return);
//        }
        
        //判断两次输入的密码是否一样
        $password1 = xgmd5($password1);
        $password2 = xgmd5($password2);
        if($password1 != $password2){
            $return['code'] = '10003';
            $return['msg'] = '两次输入的密码不一样';
            return json($return);
        }



        //判断当前手机号是否注册
        $user_info = db('user') -> field('user_id') -> where(['username' => $tel]) -> find();
        if($user_info){
            $return['code'] = '10004';
            $return['msg'] = '当前手机号已注册';
            return json($return);
        }

        //判断上级是否存在这个人
        $top_userid = 0;
        if($p_id){
            $pInfo = db('user') -> field('user_id,land_number') -> where(['user_id' => $p_id]) -> find();
            if(!$pInfo){
                $return['code'] = '10006';
                $return['msg'] = '上级id不正确';
                return json($return);
            }
            if($pInfo['land_number'] <= 0){
                $return['code'] = '10010';
                $return['msg'] = '上级用户没有开地,不能创建';
                return json($return);
            }
            //得到祖宗的id
            $top_userid = 1;
        }else{
            $return['code'] = '10004';
            $return['msg'] = '请输入上级ID';
            return json($return);
        }
        //验证手机验证码
        $telCode1 = session($tel . 'register');
        if(!$telCode1){
            $return['code'] = '10007';
            $return['msg'] = '手机验证码已失效,请重新获取';
            return json($return);
        }
        if($telCode != $telCode1){
            $return['code'] = '10008';
            $return['msg'] = '手机验证码不正确';
            return json($return);
        }


        //保存数据库
        $userInfo = array(
            'nickname' => $nickname,
            'username' => $tel,
            'password' => $password1,
            'p_id' => $p_id,
            'create_time' => time(),
            'top_userid' => $top_userid,
        );
        $flag = db('user') -> insertGetId($userInfo);
        if($flag){
            $userNumber['user_id'] = $flag;
            db('user_number') -> insert($userNumber);
            $return['code'] = '10000';
            $return['msg'] = '注册成功,请前往app登录吧';
            return json($return);
        }else{
            $return['code'] = '10009';
            $return['msg'] = '注册失败';
            return json($return);
        }
    }

    private function getTopUserId($user_id){
        if(!$user_id){
            return 0;
        }
        $p_id = db('user') -> where(['user_id' => $user_id]) -> value('p_id');
        if($p_id == 0){
            return $user_id;
        }else{
            return $this -> getTopUserId($p_id);
        }
    }

    public function updateUser(){
        return $this -> fetch();
    }

    /**
     * 修改密码
     * 手机号 密码1 密码2 手机验证码 图片验证码
     */
    public function updatePass(){
        $tel = trim(input('post.username',''));
        $telCode = trim(input('post.telCode',''));
        $imgCode = trim(input('post.imgCode',''));
        $password1 = trim(input('post.password1',''));
        $password2 = trim(input('post.password2',''));
        if(!$tel || !$password1 || !$password2 || !verifyTel($tel)){
            $return['code'] = '10001';
            $return['msg'] = '请输入账号和密码';
            return json($return);
        }
        if(!$telCode || !$imgCode){
            $return['code'] = '10002';
            $return['msg'] = '请输入验证码';
            return json($return);
        }
        //验证验证码
        $imgCode1 = session('imgCode');
        if(strtolower($imgCode1) != strtolower($imgCode)){
            $return['code'] = '10003';
            $return['msg'] = '图片验证码不正确';
            return json($return);
        }


        //判断两次输入的密码是否一样
        $password1 = xgmd5($password1);
        $password2 = xgmd5($password2);
        if($password1 != $password2){
            $return['code'] = '10004';
            $return['msg'] = '两次输入的密码不一样';
            return json($return);
        }

        //判断当前手机号是否注册
        $user_info = db('user') -> field('user_id') -> where(['username' => $tel]) -> find();
        if(!$user_info){
            $return['code'] = '10005';
            $return['msg'] = '当前手机号未注册';
            return json($return);
        }
        //验证手机验证码
        $telCode1 = session($tel . 'update');
        if(!$telCode1){
            $return['code'] = '10006';
            $return['msg'] = '手机验证码已失效,请重新获取';
            return json($return);
        }
        if($telCode != $telCode1){
            $return['code'] = '10007';
            $return['msg'] = '手机验证码不正确';
            return json($return);
        }


        //保存数据库
        $flag = db('user') -> where(['username' => $tel]) -> setField('password',$password1);
        if($flag){
            $return['code'] = '10000';
            $return['msg'] = '修改成功';
            return json($return);
        }else{
            $return['code'] = '10008';
            $return['msg'] = '修改失败';
            return json($return);
        }
    }


    public function getUrl(){
        $domain = cache('config');
        if(!$domain){
            $domain = db('config')  -> find();
            cache('config',$domain);
        }
        $url = $domain['domain'] . '/update';
        $register = $domain['domain'] . '/login/Login/register';
//        $data['updatePassword'] = $url;
//        $data['register'] = $register;
        $data['updatePassword'] = '';
        $data['register'] = '';
        $return['code'] = '10000';
        $return['msg'] = $data;
        return json($return);
    }



}
